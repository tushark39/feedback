{"version":3,"sources":["helper/Header.js","helper/Footer.js","screen/Base.js","screen/IsUploading.js","screen/UploadSucess.js","screen/ContactUs.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","href","src","alt","style","height","width","type","data-toggle","data-target","marginTop","Footer","Base","children","IsUploading","textAlign","marginBottom","React","Component","UploadSucess","App","props","onFileChange","event","setState","selectedFile","target","files","upload","data","FormData","append","state","fetch","method","body","then","res","json","axios","post","name","email","aemail","url","localStorage","setItem","isUploading","uploaded","catch","e","alert","err","console","log","onFileUpload","a","preventDefault","match","errorMessage","getItem","this","class","role","placeholder","onChange","value","color","accept","lastModifiedDate","toDateString","onClick","ContactUs","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.21bb4654.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\" id=\"home\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light navbar fixed-top navbar-custom\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    <img src=\"https://media-exp1.licdn.com/dms/image/C4E0BAQGgfwY00csmZw/company-logo_200_200/0/1602017894371?e=1614211200&v=beta&t=qtjxN4LGKpYEBWH4zQiAszqEJFH3McRfGZk-Ff7Z17Q\" alt=\"logo\" style={{height:60,width:40}} />\r\n                </a> &nbsp; <span className=\"logo-name\">The E-Guardians</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#losoSupportedContent\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"losoSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li>\r\n                            <a className=\"nav-link\" href=\"#home\">HOME</a>\r\n                        </li>\r\n                        <li>\r\n                            <span className=\"nav-link\" >LOGIN</span>\r\n                        </li>\r\n                        <li>\r\n                            <a className=\"nav-link\" href=\"#contact-us\">FORM</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <div className=\"header-overlay header-container\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"logo text-center\">\r\n                                <img src=\"images/bigLogo\" style={{marginTop:20,height:150,width:600}} alt=\"logo\" className=\"logo\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"header-text\">\r\n                                <h1>Parents Feedback Form </h1>\r\n                                <br />\r\n                                {/* <p>The name QUK ADS is a short form of telling Business People to Advertise Quickly.</p> */}\r\n                            </div>\r\n                            <div className=\"header-btns\">\r\n                                {/* <a href=\"#download-now\" className=\"btn btn-download wow fadeInLeft\">Download</a> */}\r\n                                <a href=\"#contact-us\" className=\"btn btn-tour wow fadeInRight\">Click Here <i className=\"fa fa-angle-down\" /></a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"hearder-iphone wow bounceIn\">\r\n                                {/* <img src=\"images/phoe-header.png\" height=\"100%\" width=\"200%\" alt=\"iphone-header\" /> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n      \r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n\r\nconst Footer=()=>{\r\n  return (\r\n      <footer className=\"footer\">\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                      <div id=\"copyright\">\r\n                          <p>Copyright Â© - <a href=\"#home\">The E-Guardians</a></p>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                      <div className=\"scroll-top\">\r\n                          <a href=\"#home\"><i className=\"fa fa-angle-up\" /></a>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </footer>\r\n\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Header from \"../helper/Header\";\r\nimport Footer from \"../helper/Footer\";\r\nconst Base = ({children}) => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {children}\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Base;\r\n","import React from 'react'\r\nclass IsUploading extends React.Component{\r\n    render(){\r\n        return(\r\n            <div style={{textAlign:\"center\",marginBottom:200}}>\r\n                <img src=\"https://thumbs.gfycat.com/ConventionalOblongFairybluebird.webp\" alt=\"\" style={{height:200,width:200,marginBottom:50}}/>\r\n                <h1>Uplaoding Please wait!!</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default IsUploading;","import React from 'react'\r\nclass UploadSucess extends React.Component{\r\n    render(){\r\n        return(\r\n            <div style={{textAlign:\"center\",marginBottom:200,marginTop:100}}>\r\n                <img src=\"images/confirm.png\" alt=\"\" style={{height:200,width:200,marginBottom:50}}/>\r\n                <h1>You have Sucessfully uploaded the form</h1>\r\n                <h3>If you want to update the response Please <a href=\"https://wa.link/5msjac\">Click Here</a></h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UploadSucess;","import axios from 'axios';\r\nimport React from 'react';\r\nimport IsUploading from './IsUploading';\r\nimport UploadSucess from './UploadSucess';\r\n// var cloudinary = require('cloudinary').v2\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null,\r\n            isUploading:false,\r\n            uploaded : localStorage.getItem(\"uploaded\") ? true : false,\r\n            // uploaded : false,\r\n            errorMessage : false,\r\n            name:\"\",\r\n            email:\"\",\r\n            aemail:\"\"\r\n        }\r\n    }\r\n    onFileChange = (event) => { \r\n        this.setState({ selectedFile : event.target.files[0]});\r\n         \r\n        // console.log(this.state.selectedFile);\r\n      }; \r\n\r\n      upload=()=>{\r\n        const data = new FormData();\r\n        data.append('file',this.state.selectedFile)\r\n        data.append('upload_preset','UserProfile')\r\n        data.append(\"cloud_name\",\"dd0txohwe\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/dd0txohwe/image/upload\",{\r\n          method:\"POST\",\r\n          body:data\r\n        }).then(res=>res.json())\r\n        .then((data) => {\r\n              axios.post('https://amityform2.herokuapp.com/form/api',{\r\n                \"name\":this.state.name,\r\n                \"email\":this.state.email,\r\n                \"aemail\":this.state.aemail,\r\n                \"uri\":data.url\r\n            })\r\n              .then(()=>{\r\n                localStorage.setItem(\"uploaded\",true);\r\n                this.setState({isUploading:false,uploaded:true});\r\n              })\r\n              .catch(e=>alert(\"Please Contact Administration\"))\r\n          })\r\n          .catch((err) => {\r\n              console.log(err);\r\n          })  \r\n        // cloudinary.v2.uploader.upload(formData, \r\n        // { resource_type: \"auto\" }, \r\n        // function(error, result) {console.log(result, error); });\r\n        // setTimeout(() => { \r\n        //     localStorage.setItem(\"uploaded\",true);\r\n        //     this.setState({isUploading:false,uploaded:true});\r\n        //  }, 2000);\r\n\r\n      }\r\n\r\n    onFileUpload = async(event) => { \r\n        console.log(this.state);\r\n        event.preventDefault();\r\n        this.setState({isUploading:true});\r\n       if (this.state.name!=\"\"&&this.state.email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\r\n        if(this.state.selectedFile===null){\r\n            this.setState({isUploading:false,errorMessage:\"You have not selected the Document.\"})\r\n           }\r\n        else{\r\n            this.upload();\r\n        }\r\n       }\r\n       else if(this.state.name===\"\"){\r\n        this.setState({isUploading:false,errorMessage:\"Please Enter Your Name.\"})\r\n       } \r\n       else if(!this.state.email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)){\r\n        this.setState({isUploading:false,errorMessage:\"Invalid Email provided , Valid Email :- someone@something.com\"})\r\n       }\r\n       else {\r\n           this.setState({isUploading:false,errorMessage:\"All fields are empty!!\"})\r\n       } \r\n       \r\n        // Create an object of formData \r\n        // const formData = new FormData(); \r\n       \r\n        // Update the formData object \r\n        // formData.append( \r\n        //   \"myFile\", \r\n        //   this.state.selectedFile, \r\n        //   this.state.selectedFile.name \r\n        // ); \r\n       \r\n        // Details of the uploaded file \r\n        // console.log(this.state.selectedFile); \r\n       \r\n        // Request made to the backend api \r\n        // Send formData object \r\n        // axios.post(\"api/uploadfile\", formData); \r\n      }; \r\n    render(){\r\n        \r\n        return (\r\n            <section className=\"contact-us\" id=\"contact-us\">\r\n                {\r\n                    !this.state.uploaded && <div className=\"comtainer bounceIn\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-10 offset-md-1\">\r\n                            <div className=\"section-title\">\r\n                                <h2>Form</h2>\r\n                                <p>Upload pdf which is clearly visible </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n       {\r\n           !this.state.isUploading && !this.state.uploaded &&<div className=\"contact-us-form wow bounceIn\">\r\n           <div className=\"container\">\r\n           {\r\n               this.state.errorMessage && <div class=\"alert alert-danger\" role=\"alert\" style={{}} >\r\n               {this.state.errorMessage}\r\n               </div>\r\n           }\r\n               <form role=\"form\">\r\n                   <div className=\"row\">\r\n                       <div className=\"col-md-12\">\r\n                           <input className=\"form-control\" type=\"text\" id=\"name\" placeholder=\"Name *\" onChange={(e)=>this.setState({name:e.target.value})}/>\r\n                           <input className=\"form-control\" type=\"text\" id=\"email\" placeholder=\"Email *\" onChange={(e)=>this.setState({email:e.target.value})}/>\r\n                           <input className=\"form-control\" type=\"text\" id=\"aemail\" placeholder=\"Amity Student Email\" onChange={(e)=>this.setState({aemail:e.target.value})}/>\r\n                           Scaned Form <span style={{color:\"red\"}}>*</span>: &nbsp; <input type=\"file\" onChange={this.onFileChange} style={{marginBottom:10}} accept=\"application/pdf\" />\r\n                           {\r\n                               this.state.selectedFile && <div>\r\n                                  <h2>File Details:</h2> \r\n                                   <p>File Name: {this.state.selectedFile.name}</p> \r\n                                   <p>File Type: {this.state.selectedFile.type}</p> \r\n                                   <p> \r\n                                   Last Modified:{\" \"} \r\n                                   {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n                                   </p> \r\n                               </div>\r\n                           }\r\n                           <button type=\"submit\" onClick={this.onFileUpload} className=\"btn btn-default submit-btn form_submit\">SEND</button>\r\n\r\n                           {/* <input className=\"form-control\" type=\"text\" id=\"subject\" placeholder=\"Subect\" /> */}\r\n                       </div>\r\n                       {/* <div className=\"col-md-8\">\r\n                           <textarea className=\"form-control\" id=\"message\" cols={10} rows={25} placeholder=\"Message Text...\" defaultValue={\"\"} />\r\n                           <button type=\"submit\" className=\"btn btn-default submit-btn form_submit\">SEND</button>\r\n                       </div> */}\r\n                   </div>\r\n               </form>\r\n           </div>\r\n           <div className=\"container\">\r\n               <div className=\"row\">\r\n                   <div className=\"col-md-12 wow bounceInLeft\">\r\n                       <div className=\"social-icons\">\r\n                           <ul>\r\n                               <li><a href=\"https://www.instagram.com/tushar.pandey112/\"><i className=\"fa fa-instagram\" /></a></li>\r\n                               <li><a href=\"https://www.github.com/tushark39/\"><i className=\"fa fa-github\" /></a></li>\r\n                               <li><a href=\"https://www.linkedin.com/in/tushark39/\"><i className=\"fa fa-linkedin\" /></a></li>\r\n                           </ul>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </div>\r\n\r\n       }\r\n       {\r\n           this.state.isUploading && !this.state.uploaded && <IsUploading />\r\n       }\r\n       {\r\n           this.state.uploaded && !this.state.isUploading && <UploadSucess/>\r\n       }\r\n            </section>\r\n    \r\n        );\r\n\r\n}\r\n    \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport Base from \"./screen/Base\";\nimport ContactUs from \"./screen/ContactUs\";\n// import Category from \"./screen/Category\";\n\nconst App=()=>{\n  return (\n    <Base>\n    <ContactUs />\n    </Base>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}